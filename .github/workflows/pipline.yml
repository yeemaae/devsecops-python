name: DevSecOps Python CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  sast:
    name: Static Analysis (Bandit)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install bandit

      - name: Run Bandit SAST
        run: |
          bandit -r app.py -ll || true  # Позволяет pipeline продолжиться, даже если найдены проблемы

  dast:
    name: Dynamic Analysis (OWASP ZAP)
    needs: sast
    runs-on: ubuntu-latest
    services:
      flask:
        image: python:3.10
        ports:
          - 5000:5000
        options: >-
          --health-cmd="curl --fail http://localhost:5000 || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        volumes:
          - .:/app
        entrypoint: sh -c "pip install -r /app/requirements.txt && python /app/app.py"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Wait for Flask to be healthy
        run: |
          echo "Waiting for Flask app to start..."
          sleep 30  # Подстраховка, чтобы Flask был точно доступен

      - name: Run ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.10.0
        with:
          target: "http://localhost:5000"
